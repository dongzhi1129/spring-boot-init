plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.21.0'
}

group = 'com.pipeline'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

def G_VERSION =  (project.hasProperty('version') && project.getProperty('version') !="unspecified")?project.getProperty('version'):"latest"
println G_VERSION
version = G_VERSION

def imageRepo = project.hasProperty('imageRepo')?project.getProperty('imageRepo'):"snapshot"
println imageRepo
def deployBasePath = 'deloy/image/'
def dockerJfrogURI = " http://192.168.31.123:18082/artifactory/personal-web-${imageRepo}-docker-local/self/spring-boot-init:${G_VERSION}"
def dockerFileName = deployBasePath + "Dockerfile"
println dockerJfrogURI

docker {
	name dockerJfrogURI
	dockerfile file(dockerFileName)
	buildArgs([PARAM_PACKAGE_NAME:(project.name + "-" + G_VERSION + ".jar"),PARAM_APP_NAME:project.name])
	pull true
	noCache true
}
test {
	useJUnitPlatform()
}
